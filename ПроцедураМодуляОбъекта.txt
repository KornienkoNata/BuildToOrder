//Автоматическое заполнение "Заказа на сборку" на основании "Заказа клиента".
//Форма документа "Заказ на сборку"

// ОБРАБОТЧИКИ СОБЫТИЙ 
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)

	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
		ЗаполнитьПоЗаказуКлиента(ДанныеЗаполнения);
		ЗаполнитьТабличнуюЧасть(ДанныеЗаполнения);
	
	КонецЕсли;
	
	ИнициализироватьДокумент(ДанныеЗаполнения);
	
КонецПроцедуры


//---
// Инициализация и заполнение

Процедура ЗаполнитьПоЗаказуКлиента(ЗаказКлиента)

	Запрос = Новый Запрос( 
	"ВЫБРАТЬ
	|	ЗаказКлиентаТовары.Номенклатура,
	|	ЗаказКлиентаТовары.Ссылка,
	|	ЗаказКлиентаТовары.Количество
	|ПОМЕСТИТЬ НаименованиеНоменклатуры
	|ИЗ
	|	Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
	|ГДЕ
	|	ЗаказКлиентаТовары.Ссылка = &ЗаказКлиента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НаименованиеНоменклатуры.Номенклатура,
	|	ЗаказКлиента.Проведен КАК Проведен,
	|	ЗаказКлиента.Организация,
	|	ЗаказКлиента.Статус КАК СтатусДокумента,
	|	ЗаказКлиента.Склад КАК СкладДокумента,
	|	ЗаказКлиента.Сделка,
	|	ЗаказКлиента.Склад.ЭтоГруппа КАК ЭтоГруппа,
	|	ЗаказКлиента.Подразделение,
	|	ВЫБОР
	|		КОГДА ЗаказКлиента.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.НеСогласован))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОшибкиСтатус,
	|	НаименованиеНоменклатуры.Количество
	|ИЗ
	|	НаименованиеНоменклатуры КАК НаименованиеНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента КАК ЗаказКлиента
	|		ПО НаименованиеНоменклатуры.Ссылка = ЗаказКлиента.Ссылка");
	
	Запрос.УстановитьПараметр("ЗаказКлиента", ЗаказКлиента);
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();

	МассивДопустимыхСтатусов = Новый Массив;
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыЗаказовКлиентов.Согласован);
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыЗаказовКлиентов.КОбеспечению);
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыЗаказовКлиентов.КОтгрузке);
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыЗаказовКлиентов.Закрыт);
	
	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
		ЗаказКлиента,
		Реквизиты.СтатусДокумента,
		НЕ Реквизиты.Проведен,
		Реквизиты.ЕстьОшибкиСтатус,
		МассивДопустимыхСтатусов);
	
	//Заполнение шапки
	Организация       = Реквизиты.Организация;
	Сделка            = Реквизиты.Сделка;
	ДокументОснование = ЗаказКлиента;
	Подразделение     = Реквизиты.Подразделение;
 	Склад = Реквизиты.СкладДокумента;
	ТаблицаТовары = Документы.ЗаказКлиента.ТаблицаНеобеспеченнойПотребности(ЗаказКлиента);
	Номенклатура =  Реквизиты.Номенклатура;
	КоличествоУпаковок = Реквизиты.Количество;		
	
КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧасть(ДанныеЗаполнения)
	
	ВариантКомплектации = Справочники.ВариантыКомплектацииНоменклатуры.НайтиПоНаименованию(ДанныеЗаполнения.Товары[0].Номенклатура); 	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВариантыКомплектацииНоменклатурыТовары.Номенклатура,
		|	ВариантыКомплектацииНоменклатурыТовары.Количество * &КоличествоОбъектов КАК КоличествоУпаковок,
		|	ВариантыКомплектацииНоменклатурыТовары.Ссылка
		|ИЗ
		|	Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
		|ГДЕ
		|	ВариантыКомплектацииНоменклатурыТовары.Ссылка = &Ссылка";
				 	

	Запрос.УстановитьПараметр("КоличествоОбъектов", ДанныеЗаполнения.Товары[0].Количество);		
	Запрос.УстановитьПараметр("Ссылка", ВариантКомплектации); 
	
	ТаблицаТовары = Запрос.Выполнить().Выгрузить();
	
	
	//Тут заполнить таблицу комплектующими
	Если ТаблицаТовары.Количество() > 0 Тогда

		//ЗаполнитьЗначенияСвойств(ЭтотОбъект, ТаблицаТовары[0]);
		Товары.Загрузить(ТаблицаТовары);
		//СкладПолучатель = ТаблицаТовары[0].Склад;

	КонецЕсли;

КонецПроцедуры

